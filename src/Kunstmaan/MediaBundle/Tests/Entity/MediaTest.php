<?php

namespace Kunstmaan\MediaBundle\Tests\Entity;

use Kunstmaan\MediaBundle\Entity\Folder;
use Kunstmaan\MediaBundle\Entity\Media;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-28 at 14:19:20.
 *
 * @coversNothing
 */
class MediaTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Media
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @covers \Kunstmaan\MediaBundle\Entity\Media::__construct
     */
    protected function setUp()
    {
        $this->object = new Media();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getFileSize
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setFileSize
     */
    public function testSetFileSize()
    {
        $this->object->setFileSize(45);
        $this->assertSame('45b', $this->object->getFileSize());
        $this->object->setFileSize(64 * 1024);
        $this->assertSame('64kb', $this->object->getFileSize());
        $this->object->setFileSize(64 * 1024 * 1024);
        $this->assertSame('64mb', $this->object->getFileSize());
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getUuid
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setUuid
     */
    public function testGetSetUuid()
    {
        $this->object->setUuid('abc');
        $this->assertSame('abc', $this->object->getUuid());
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getName
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setName
     */
    public function testGetSetName()
    {
        $this->object->setName('name.jpg');
        $this->assertSame('name.jpg', $this->object->getName());
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getLocation
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setLocation
     */
    public function testGetSetLocation()
    {
        $this->object->setLocation('local');
        $this->assertSame('local', $this->object->getLocation());
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getContentType
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getContentTypeShort
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setContentType
     */
    public function testGetSetContentType()
    {
        $this->object->setContentType('image/jpeg');
        $this->assertSame('image/jpeg', $this->object->getContentType());
        $this->assertSame('jpeg', $this->object->getContentTypeShort());
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getCreatedAt
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setCreatedAt
     */
    public function testGetSetCreatedAt()
    {
        $date = new \DateTime();
        $this->object->setCreatedAt($date);
        $this->assertSame($date, $this->object->getCreatedAt());
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getUpdatedAt
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setUpdatedAt
     */
    public function testGetSetUpdatedAt()
    {
        $date = new \DateTime();
        $this->object->setUpdatedAt($date);
        $this->assertSame($date, $this->object->getUpdatedAt());
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getContent
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setContent
     */
    public function testGetContent()
    {
        $this->object->setContent('content');
        $this->assertSame('content', $this->object->getContent());
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getFolder
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setFolder
     */
    public function testGetSetFolder()
    {
        $folder = new Folder();
        $folder->setId(45);
        $this->object->setFolder($folder);
        $this->assertSame(45, $this->object->getFolder()->getId());
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setDeleted
     * @covers \Kunstmaan\MediaBundle\Entity\Media::isDeleted
     */
    public function testGetSetDeleted()
    {
        $this->assertFalse($this->object->isDeleted());

        $this->object->setDeleted(true);
        $this->assertTrue($this->object->isDeleted());
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getMetadata
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getMetadataValue
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setMetadata
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setMetadataValue
     */
    public function testGetSetMetaDataAndValues()
    {
        $meta = ['original_width' => 320, 'original_height' => 200];
        $this->object->setMetadata($meta);
        $this->assertSame($meta, $this->object->getMetadata());
        $this->assertSame(320, $this->object->getMetadataValue('original_width'));
        $this->assertSame(200, $this->object->getMetadataValue('original_height'));
        $this->object->setMetadataValue('original_width', 640);
        $this->assertSame(640, $this->object->getMetadataValue('original_width'));
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getUrl
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setUrl
     */
    public function testGetSetUrl()
    {
        $this->object->setUrl('http://domain.tld/path/name.ext');
        $this->assertSame('http://domain.tld/path/name.ext', $this->object->getUrl());
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getOriginalFilename
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setOriginalFilename
     */
    public function testGetSetOriginalFilename()
    {
        $this->object->setOriginalFilename('name.ext');
        $this->assertSame('name.ext', $this->object->getOriginalFilename());
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getCopyright
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setCopyright
     */
    public function testGetSetCopyright()
    {
        $this->object->setCopyright('(c) 2014 Kunstmaan All rights reserved');
        $this->assertSame('(c) 2014 Kunstmaan All rights reserved', $this->object->getCopyright());
    }

    /**
     * @covers \Kunstmaan\MediaBundle\Entity\Media::getDescription
     * @covers \Kunstmaan\MediaBundle\Entity\Media::setDescription
     */
    public function testGetSetDescription()
    {
        $this->object->setDescription('Description of this picture');
        $this->assertSame('Description of this picture', $this->object->getDescription());
    }
}
